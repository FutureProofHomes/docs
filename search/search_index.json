{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Welcome to the FutureProofHomes Documentation page. Our goal is to help you get the most out of the FutureProofHomes voice assistant hardware and software so that you can control your smart home with your voice and your own private AI. In fact, that's our slogan!</p> <p> </p>"},{"location":"#a-quick-note-about-modular-hardware-design","title":"A Quick Note About Modular Hardware Design","text":"<p>Most customers think in terms of complete \"products\u201d.  So, at FutureProofHomes we will sell complete pre-assembled products.  However, unlike most hardware companies, our products will comprise of \"modules\", and each module is made up of \"components\u201d.  In simple terms, we like to think of FutureProofHomes as the \u201cIkea of hardware\u201d.</p> <p>Good modular hardware design allows us to quickly iterate our products and innovate faster than monolithic hardware companies. It also allows our customers to easily repair and upgrade their products. And finally, it also helps us assure our customers that we will avoid the pitfalls of planned obsolescence which many hardware companies fall into.</p> <p>In summary, a strong modular design strategy helps us keep a competitive advantage and adhere to our core principles.</p>"},{"location":"#need-more-help","title":"Need More Help?","text":"<p>While we hope this documentation will answer all your questions, we realize support is sometimes needed. The FutureProofHomes team will do their best to keep up with support requests, but we also lean on our community to help all of us. See the links below and decide which method of support is best for your needs.</p> <p>Have a general question and need quick help from the community?</p> <p>Chat with the Community on Discord </p> <p>Discord too chatty and you want a record of your general question?</p> <p>Start a Discussion on Github </p> <p>Do you have a feature request you'd love to see?</p> <p>Look through our existing Feature Requests first, then open a new request if necessary:  Request a New Feature on Github </p> <p>Have you found a reproducible issue with the hardware or software?</p> <p>Report a Bug on Github </p>"},{"location":"ai-base-station-introduction/","title":"Introduction","text":"<p>We are laser focused on powering the Satellite1 with a local AI server that is fast and affordable.  Stay tuned for more details.</p> Front view of functional early prototype AI Base Station Back view of AI Base Station"},{"location":"satellite1-amplifier-module-overview/","title":"Amplifier","text":"<p>Coming Soon...</p>"},{"location":"satellite1-assembly/","title":"PCB Assembly & First Boot","text":""},{"location":"satellite1-assembly/#connect-the-pcbs","title":"Connect the PCBs","text":"<p>The Satellite1 comes in 2 pieces: </p> <ul> <li>The \"Hat\" (round board) </li> <li>The \"Core\" (rectangular board)</li> </ul> <p>You'll notice a standard Raspberry Pi 40-pin connector on the Hat board (marked in red). Carefully align the Core board's 2 rows of pins with the Hat's 40 pin connector and press them together.</p> <p></p>"},{"location":"satellite1-assembly/#optional-mmwave-presence-sensors","title":"(Optional) mmWave Presence Sensors","text":"<p>The Satellite1 HAT has two ports for optionally mounting external mmWave presence sensors: LD2410 or LD2450. Please read more about setting up and calibrating your presence sensors here.</p> LD2410 Mounted on Sat1 HAT LD2450 Mounted on Sat1 HAT"},{"location":"satellite1-assembly/#first-boot-powering-on","title":"First Boot - Powering On","text":"<p>The below instructions assume you have connected the HAT to the CORE and are powering the Satellite1 for the first time:</p> <ol> <li>Take a USB-C cable and plug one end into the USB socket on the Hat labeled \"CORE/ESP\".</li> <li>Plug the other end into a 9V USB-C power supply (if you want to power a speaker from the HAT), or a computer 5V USB-C connection (if you're plugging into the headphone jack). </li> <li>Upon first boot, you will see the blue LEDs count down clockwise as the device flashes the XMOS audio processor.</li> <li>Finally, the LEDs will begin to sparkle a warm white color. Congrats! Move to the next step.</li> </ol>"},{"location":"satellite1-awesome-automations/","title":"Awesome Automations","text":""},{"location":"satellite1-awesome-automations/#blueprints","title":"Blueprints","text":"<p>Coming Soon..</p>"},{"location":"satellite1-connecting-to-ha/","title":"Connecting to Home Assistant","text":"<p>Your Satellite1 arrives pre-flashed with all the necessary firmware to get you up and running quickly. You have 2 choices: </p> I want to set up via my iPhone or Android device with Bluetooth. (Recommended) <p>Open the Home Assistant Companion App on your Android or iPhone.  Make sure Bluetooth on your phone is on and that you're nearby the Sat1!  </p> <ol> <li> <p>Tap \"Settings\": </p> </li> <li> <p>Tap \"Devices &amp; Services\": </p> </li> <li> <p>Tap \"Add\" next to your Sat1 device (contains last 6 of device MAC address): </p> </li> <li> <p>Type in your 2.4 Ghz WiFI credentials:</p> </li> </ol> 5 GHz Wi-Fi is not supported! Use only 2.4 GHz Wi-Fi. <p></p> <ol> <li> <p>On the Sat1 HAT, press the right \"Action button\" to give authorization: </p> </li> <li> <p>Tap \"Continue\" after successful Wifi connection: </p> </li> <li> <p>Tap \"Ok\" to begin setting up ESPHome: </p> </li> <li> <p>Tap the name of your Sat1 device and then tap the \"Submit\" button: </p> </li> <li> <p>The Wizard will pull down the most recent Sat1 Firmware: </p> </li> <li> <p>The Wizard will ask you to say the Wake Word twice: </p> </li> <li> <p>Type the Area this Sat1 falls in: </p> </li> <li> <p>Stick with the default or change the wake word, conversation agent, and voice: </p> </li> <li> <p>After completing the Wizard, do NOT click to add the Sat1 to ESPHome again.  Simply refresh and this will go away. </p> </li> </ol> <p>Congrats.  You're done!</p> I want to set up via my computer &amp; USB-C cable. (Advanced) <p>Plug your Sat1 directly into your computer with a USB-C cable that supports a data connection.</p> <ol> <li> <p>Click the connect button below and select the JTAG device in the browser's notification: </p> </li> <li> <p>Click \"Install\": </p> </li> <li> <p>Optionally erase the device, then click \"Next\" and then \"Install\": </p> </li> <li> <p>Installation will complete. Click \"Next\": </p> </li> <li> <p>Type in your 2.4ghz WiFi network and click \"Connect\".  Your device will begin sparkling blue while attempting to connect. </p> </li> <li> <p>Congrats you're now connected to your Wifi.  Your device will now begin sparkling red.  This means it needs to be connected to ESPHome in your Home Assistant instance. </p> </li> <li> <p>Inside Home Assistant, go to \"Settings -&gt; Devices &amp; Services\" and notice you have a Discovered `Satellite1 xxxxxx' device.  Click add and follow the onboarding steps. </p> </li> </ol> <p>Congrats.  You're done!</p>"},{"location":"satellite1-connecting-to-ha/#esphome-user-interface","title":"ESPHome User Interface","text":"<p>Once your Sat1 is connected to Home Assistant you should familiarize yourself with all the server-side settings you may want to change:</p> <ol> <li> <p>Inside your Home Assistant, head over to \"Settings -&gt; Devices &amp; Services -&gt; ESPHome\" and click on your Sat1 device: </p> </li> <li> <p>Understand all the features of your Sat1 device: </p> </li> </ol>"},{"location":"satellite1-dev-kit-enclosure/","title":"Enclosure Printing & Assembly","text":""},{"location":"satellite1-dev-kit-enclosure/#about-the-dev-kit-speaker-enclosure","title":"About the Dev Kit Speaker Enclosure","text":"<p>The Satellite1 Dev Kit Speaker Enclosure is a snap-fit enclosure that can be printed on a single plate. We highly recommend PETG filament, plus some Loctite (Blu-Tack) and speaker polyfill for the best acoustic results. This is our first-generation enclosure, and many revisions will come out as we iterate the product and receive feedback.</p> <p>All the files necessary can be found in the Satellite1-Enclosures Github Repo.</p> Satellite1 speaker enclosure standing tall 25 watt BMR speaker fires down towards sound diffuser cone LEDs are protected inside the light ring"},{"location":"satellite1-dev-kit-enclosure/#enclosure-limitations","title":"Enclosure Limitations","text":"<p>Before we get started let's discuss some of the limitations of this enclosure to set expectations:</p> <ol> <li>The lux sensor will not give accurate readings of the room. We will solve this with a light pipe and modified design.</li> <li>The temp/humidity sensor will not give accurate readings of the room.  Also the mmWave sensor is pointed up at the ceiling. Our upcoming \"SHOE\" PCB will relocate these sensors down into the speaker chamber and expose a PoE port in the speaker.</li> <li>The light ring does not fully diffuse the LEDs. We will solve this with a slightly modified diffuser.</li> <li>The mic pipes slightly decrease the accuracy of speech-to-text. We will solve this once we get to plastic injection molded enclosures.</li> <li>The wake word does not respond when I'm playing music near full volume. We will experiment with modified designs and gaskets to mitigate the vibrations in the enclosure which impact the microphone reference signal.</li> <li>The PCBs are hard to add/remove. This is by design, with a little practice things become easier.</li> </ol>"},{"location":"satellite1-dev-kit-enclosure/#printing-the-dev-kit-speaker-enclosure","title":"Printing the Dev Kit Speaker Enclosure","text":"<p>The full speaker enclosure consists of 4 major parts.  If you don't have the necessary speaker you can print just the Satellite1 UFO enclosure.</p> <p></p> NOTE: Enclosures and geometry files may be specific to a hardware revision &amp; speaker model number. I want to quickly print using the pre-build slicer project file. I want to create my own project from scratch in my slicer software."},{"location":"satellite1-dev-kit-enclosure/#pre-built-slicer-project-file","title":"Pre-Built Slicer Project File","text":"<ol> <li> <p>Determine your PCB hardware revision by reading the silkscreen on the PCBs.  i.e. \"R2024.12.06\"</p> </li> <li> <p>Determine the speaker model number you're running.  i.e. \"Tectonic-TEBM46C20N-4B\"</p> </li> <li> <p>Download the correct pre-built <code>.3mf</code> project file from the Satellite1-Enclosures Github repository and open in your favorite slicer software.</p> <p></p> </li> <li> <p>Right-click on each part and select your desired filament. (NOTE #1: PETG-HF is better for acoustics, but PLA will work too.)  (NOTE #2: Set UFO Enclosure's \"Light Ring\" layer to transparent or white filament so you can see the LEDs.)     </p> </li> <li> <p>After slicing and printing you see this is approx a 4.5h print.  Everything is \"snap-fit\" and requires no screws.     </p> </li> </ol>"},{"location":"satellite1-dev-kit-enclosure/#custom-built-slicer-project","title":"Custom-Built Slicer Project","text":"<p>If you cannot or do not want to use our pre-built slicer project file then you can build your own plate from scratch:</p> <ol> <li>Add the necessary <code>.stl</code> geometry files to your slicer software from the Satellite1-Enclosures Github repository.</li> <li>Set your project to use the recommended settings.<ol> <li>0.2mm layer height</li> <li>3 wall loops for strength</li> <li>15% infill (increase this to 50% for the speaker enclosure for even better acoustics)</li> <li>(Optional) Arachne wall generator</li> <li>Supports are disabled EXCEPT the speaker chamber has \"Build Plate Only Supports\" enabled</li> <li>No-Brim </li> </ol> </li> </ol>"},{"location":"satellite1-dev-kit-enclosure/#assembling-the-dev-kit-speaker-enclosure","title":"Assembling the Dev Kit Speaker Enclosure","text":"<ol> <li>Grab some Loctite (aka Blu-Tack) and generic speaker Polyfill.  Attach your chosen mmWave to the HAT.   </li> <li>There are three locations where you'll see 2 mounting lips on the UFO enclosure. The goal is to get the Sat1 HAT sloted underneath the smaller bottom lip in all three locations, such that the LEDs are peaking through the square cutouts and into the light ring.   </li> <li>Align the bottom (south) part of the Sat1 HAT under the bottom lip and press firmly at the top (north) of the Sat1 HAT near and around the USB-C ports and headphone jack.  Press around the parameter of the Sat1 HAT to snap in under all the bottom lips.  You'll know when you're done when the 4 buttons click perfectly.   </li> <li>If you need to remove the HAT, pull on the corner of the wall near and lift up from the USB-C ports.   </li> <li>Roll your Loctite into a \"snake\" that you wrap around the speaker to make a gasket.   </li> <li>Route the speaker cables up through the speaker chamber and out the top.  You only need 1 inch of cable coming out the top.    </li> <li>Add polyfill to the speaker chamber.   </li> <li>Slot your speaker into the enclosure (the speaker should not sit flush due to the gasket) and lock it in with the lock ring.    </li> <li>Choose the right speaker chamber plug based on the guage of your speaker cables and wedge it in as best as possible, leaving about 1 in of cable sticking out.  Cover the plug with Loctite.    </li> <li>Connect the JST-XH connector to the bottom of the HAT and align then snap the UFO to the speaker chamber.    </li> <li>Align and snap the speaker stand on.   </li> <li>Find the \"V\" icon on the UFO enclosure.  This is where you'll plug the USB-C cable to the HAT/CORE which powers up the device.    </li> </ol> <p>Congrats on building your own Satellite1 Dev Kit Speaker Enclosure!</p>"},{"location":"satellite1-faqs/","title":"FAQs","text":"I messed something up, How do I start over? <p>Perform a Factory Reset</p> <p></p> How do I access the Sat1 logs? <p>If you want to look at the logs, click here</p> <p></p> Why is the temp sensor incorrect? <p>The temperature/humidity sensor is placed on the HAT near other warm components which cause the sensor to run hot. Look at the Sat1 settings and set a negative offset to compensate for this issue. Logically, if you put the Sat1 in the ceiling you're going to be getting the temperature for your attic, and if you place Sat1 in an enclosure you'll be getting the internal temperature.</p> <p>There are two key things to remember here:</p> <ol> <li>This is a \"Dev Kit\" and the sensors are on the device for development purposes.</li> <li>We are working on advanced enclosures which will place sensors in the correct location. Stay tuned.</li> </ol> <p></p> What wake words are supported? <p>The Satellite1 uses ESPHome's microWakeWord and supports the \"Hey Jarvis\" and \"Okay Nabu\" wake words.  If you'd like to add other wake word please read How do I add other 'wake words']</p> <p></p> How do I add other wake words to the Sat1? <p>If you're a developer you can modify the Sat1 firmware and add other compatible MicroWakeWord models or even create your own custom wake word. NOTE: The more wake words you add to the firmware the less resouces your Sat1 has for other tasks.</p> <p></p> The wake word isn't always responding! <ol> <li>Try both \"Okay Nabu\" and \"Hey Jarvis\".</li> <li>\"Okay Nabu\" is more trained and may have a higher success rate.</li> <li>Speak normally. Don't scream.</li> <li>Also. Don't. Speak. Like. a Robot. Just be normal.</li> <li>Don't lean into the speaker. Stand a normal 2+ feet away.</li> <li>Make sure the microphones are not obstructed and that the device is not tucked in a shelf or something similar which causes sound reflection. Same goes with marble floors that cause echoes in the room.</li> <li>If you have an accent it's going to be harder, but not impossible.</li> <li>If you have loud water running, wind blowing, kids screaming, oven hoods running... you're gonna have a bad time.</li> </ol> <p>Still having issues? This will get better in time. We have lots of ideas to solve these problems.</p> <p></p> How do I get help or report issues? <p>Need further help or have suggestions for the product or documentation? Reach out!</p> <p>There are many ways to contact us, click here</p>"},{"location":"satellite1-introduction/","title":"Introduction","text":"<p>The Satellite 1 Developer Kit is the first version of our private voice assistant hardware and is the foundation for the larger ecosystem we're building.  The Dev Kit comprises of two components that we call \"the HAT\" (round board) and \"the Core\" (rectangular board).  When you connect these two components together you get the Satellite1 Dev Kit.</p> Animation shows how to attach the rectangular Core Board to the round Hat Board, with an optional mmWave presence sensor."},{"location":"satellite1-introduction/#quick-live-demo","title":"Quick Live Demo","text":"<p>When properly set up the Satellite1 can be even more powerful than some of the mainstream voice assistants out there.  Watch the live demo section of our launch video to get a sense of the Satellite1 capabilities:</p>"},{"location":"satellite1-introduction/#detailed-specifications-features","title":"Detailed Specifications &amp; Features","text":"<p>You can read detailed sepecifications about the hardware on their product pages.</p> <ul> <li>Satellite1 HAT Board</li> <li>Satellite1 Core Board</li> </ul>"},{"location":"satellite1-introduction/#requirements","title":"Requirements","text":"<p>The Satellite1 has a few requirements to get up and running.</p> <ol> <li>An active installation of Home Assistant</li> <li>A 2.4 GHz WiFi network (internet is not required)</li> <li>The recommended Satellite1 accessories (see Recommended Accessories)</li> </ol>"},{"location":"satellite1-introduction/#future-modules-enclosures-ai-server","title":"Future Modules, Enclosures &amp; AI Server","text":"<p>In the future we will announce modules, enclosures, and mount kits that easily connect your Satellite1 Dev Kit to make a complete product.  We will also be releasing an AI Base Station that will power all the Satellite1's in your home.</p>"},{"location":"satellite1-introduction/#satellite1-vs-home-assistant-voice-preview-edition","title":"Satellite1 vs. Home Assistant Voice Preview Edition","text":"<p>The following table compares the main features of the Sat1 and Home Assistant Voice PE products.  Both products run the same ESP32-S3 and XMOS chip.  Our firmwares are also extremely similar (by design, to increase engagement and keep the community moving together). In general, it is fair to say that the Sat1 is more feature rich, but lacks an enclosure (hence why we're a Dev Kit).  Our enclosure is coming in Q1'25 so feel free to get your Dev Kit now!</p> Feature Satellite1 Home Assistant Voice PE Microphones Four high-performance microphones (XMOS firmware uses two microphones currently.  Future firmware upgrade will utalize all 4 microphones with beamforming). Two microphones designed to hear voice commands in most environments. Speaker Output 25W speaker amplifier capable of 48 kHz audio streaming. Also allows 3.5mm jack for external speakers. Built-in 3W speaker for 48 kHz playback; includes a 3.5mm stereo jack for external speakers. Environmental Sensors Includes room temperature, humidity, and luminosity sensors; supports adding mmWave presence detection (LD2410 or LD2450). Primarily focused on voice assistance; does not include additional environmental sensors. Form Factor Available as a development kit with 4 buit-in buttons and components for assembly; official enclosure planned for future release. Comes in a ready-to-use injection-molded case with physical controls, including a mute switch and volume dial. Price $69.99 for the development kit. $59 for the Preview Edition. Power Powered by USB-C PD (Power Delivery), enabling the extra power needed for the 25W amplifier. Powered by USB-C. Expansion Includes two 40-pin expansion connectors for powerful future accessories. Grove port for limited expansion. LED Ring 24 LEDs for visual feedback. 12 LEDs for visual feedback. Software ESPHome Firmware very similar to Home Assistant Voice ESPhome firmware for Home Assistant Voice"},{"location":"satellite1-mini-speaker-module-overview/","title":"Mini Speaker","text":"<p>Coming Soon...</p>"},{"location":"satellite1-modifying-the-firmware/","title":"Modifying the Firmware","text":""},{"location":"satellite1-modifying-the-firmware/#import-the-sat1-to-your-esphome-dashboard","title":"Import the Sat1 to your ESPHome Dashboard","text":"<p>The firmware running on the Satellite1 is open source.  This means you can modify the firmware to build all kinds of amazing things with it!  All we ask contribute back the FutureProofHomes community by submitting pull requests to the Satellite1-ESPHome repository.</p> After taking control of your device's firmware you will no longer receive firmware updates from the community. If you'd like to get back in sync with the community you'll need to restore factory firmware back to the Sat1. Please also be aware that flashing custom firmware can potentially damage the Sat1 device. These instructions are provided with the understanding that you have the necessary expertise to proceed. We will assume a certain level of familiarity with the process. Proceed with caution, and enjoy the journey! <p>There are two ways you can modify the firmware running on your Satellite1:</p> I want to make simple changes from my Home Assistant server via the ESPHome Device Builder dashboard software. (Recommended) <p>NOTE: Your Home Assistant instance must have the ability to run \"Add-Ons\". If you cannot run add-ons, see alternate ways to run this software by reading ESPHome's official documentation.</p> <ol> <li> <p>Install the ESPHome Device Builder Add-on by clicking below: Install ESPHome Device Builder</p> </li> <li> <p>After the install is complete click \"Open Web UI\": </p> </li> <li> <p>Click \"SHOW\" to see your Sat1 devices you have not taken control of: </p> </li> <li> <p>Click \"Take Control\" and give the device a name: </p> </li> <li> <p>Wait while the firmware compiles and your Sat1 is flashed over-the-air with your new firmware. This can take a significant amount of time depending on your server's hardware specs (Recommend 8gb RAM or more to avoid compilation errors). Please be patient: </p> </li> <li> <p>When the firmware is uploaded to the Sat1, you'll see the boot logs on your screen. You can close the window and return to the ESPHome Device Builder dashboard and click the \"EDIT\" button and have fun! </p> </li> </ol> <p>Congrats.  You're done!</p> I'm a developer and want to make heavy changes in my IDE or from the command line. (Advanced) <p>I'll keep this simple. Just read here: Getting Started with the ESPHome Command Line</p> <p>If you master this stuff then please join the Discord and our contributor team!  We'd love to have you!</p>"},{"location":"satellite1-mount-kit-overview/","title":"In-Ceiling Mount Kit","text":"<p>Coming Soon...</p>"},{"location":"satellite1-powering-on/","title":"Satellite1 powering on","text":""},{"location":"satellite1-powering-on/#first-boot-unboxing-experience","title":"First Boot - Unboxing Experience","text":"<p>The below instructions assume you have connected the HAT to the CORE and are powering the Satellite1 for the first time:</p> <ol> <li>Take a USB-C cable and plug one end into the USB socket on the Hat labeled \"CORE/ESP\".</li> <li>Plug the other end into a 9V USB-C power supply (if you want to power a speaker from the HAT), or a computer 5V USB-C connection (if you're plugging into the headphone jack).</li> <li>Upon first boot, you will see the blue LEDs count down clockwise as the device flashes the XMOS audio processor chip.</li> <li>Finally, the LEDs will begin to sparkle a warm white color. Congrats! Move to the next step.</li> </ol>"},{"location":"satellite1-presence-sensors/","title":"Presence Sensors","text":""},{"location":"satellite1-presence-sensors/#millimeter-wave-presence-sensors","title":"Millimeter-wave presence sensors.","text":"<p>The Satellite1 HAT has two ports for optionally mounting external mmWave presence sensors: LD2410 or LD2450.  These sensors have different possibilities, and suit different needs.  Please read below.</p> <p></p> LD2410 Mounted on Sat1 HAT LD2450 Mounted on Sat1 HAT"},{"location":"satellite1-presence-sensors/#sensor-positioning","title":"Sensor Positioning","text":"<p>When the sensor is directly mounted to the HAT it will point in the direction of the microphone and LEDs, which may work for your situation.  However, you can also use the sensors' included JST cable to position the sensor in any orientation you'd like so it is not directly mounted to the HAT.</p> <p></p>"},{"location":"satellite1-presence-sensors/#sensor-firmware","title":"Sensor Firmware","text":"<p>Both the LD2410 &amp; LD2450 can be updated via the HLKRadarTool mobile app over bluetooth.  Watch this quick video to see how to access the sensor and change the firmware version:</p> <p> </p> <p> </p>"},{"location":"satellite1-presence-sensors/#mmwave-glossary","title":"mmWave Glossary","text":"<ol> <li>Gate: this sensor is using \"gate\" as definition of distance range. This is some range of distance, which can be tuned separately from others. Think of it as of \"onion\" layer, with center on sensor. There are 8 gates on LD2410 (plus gate 0, but it's effectively useless).</li> <li>Distance Resolution: the \"thickness\" of one gate. The LD2410 can have resolution of 75cm or 20cm per gate. With resolution of 75cm per gate, maximum distance is <code>0.75 * 8 =</code> 6 meters (sorry my Imperial-units-friends), while with 20cm it's 1.6 meters. But with latter you can achieve much better precision.</li> <li>Energy: basically \"amount of presence\" in the gate. The more actively you're moving - the more will energy there will be.</li> </ol>"},{"location":"satellite1-presence-sensors/#firmware-installation","title":"Firmware Installation","text":"The FutureProofHomes team is working on making this process seemless so you do not have to modify the firmware.  Please track this ticket for updates. <ol> <li>Follow these steps to modify the Sat1 Firmware</li> <li>Uncomment the correct lines depending on the mmWave sensor you want to use:<ol> <li>For the LD2410: Uncomment the line <code>mmwave_ld2410: !include common/mmwave_ld2410.yaml</code> in the <code>OPTIONAL COMPONENTS</code> section of satellite1.yaml.</li> <li>For the LD2450: Uncomment the line <code>mmwave_ld2450: !include common/mmwave_ld2450.yaml</code> in <code>OPTIONAL COMPONENTS</code> section of satellite1.yaml.</li> </ol> </li> <li>Boot the Sat1 and check it's device page in Home Assistant after device reboot.  You should see a ton more entities in your Sat1 device page.</li> </ol>"},{"location":"satellite1-presence-sensors/#about-the-ld2410b","title":"About the LD2410(B)","text":"<p>This is small, but powerful sensor. It can sense motion and still human presence for distances up to 6 meters. It has a detection angle +/-60 degrees, and should be fine-tuned for best performance. Also it can see through glass walls, thin plywood etc.</p> <p> Get it on Amazon</p>"},{"location":"satellite1-presence-sensors/#configuration","title":"Configuration","text":"<p>Don't be overwhelmed with several dozens new entities that appeared after installation. They all are useful, and after fine-tuning the sensor you can disable those you not need. Let's familarize ourselves with some useful entities:</p> <ol> <li>Binary sensors:<ol> <li>Moving target - sensor of moving target presence.</li> <li>Still target - still presemce sensor. Mostly off, when moving target is present.</li> <li>Presence - main presence sensor. Populated by other two, with cooldown (see Timeout below).</li> </ol> </li> <li>Sensors:<ol> <li>Moving/still distance - sensors of the distance to corresponding target.</li> <li>G(1-8) moving/still energy - the value of energy for corresponding gate.</li> </ol> </li> <li>Switches:<ol> <li>Engineering mode - this switch will enable fine-tuning for sensor, and will report its readings to each gate in real time. Keep it off when not setting up your sensor, as it is pretty extensive operation.</li> <li>Control Bluetooth - enables built-in Bluetooth on sensor, so you could connect to it with HLK application and set it up from there. Useful, if you want to upgrade sensor firmware.</li> </ol> </li> <li>Select:<ol> <li>Distance resolution - you can choose gate length 0.75m or 0.2m</li> </ol> </li> <li>Numbers:<ol> <li>Timeout - will set the cooldown period for sensor (time from last presence detected to main presence sensor switching into \"off\" state).</li> <li>Max moving/still distance gate - will restrict sensor to certail distance. E.g. if it's set to 6, and distance resolution is 0.75 - max sensor triggering distance will be 4.5 meters.</li> <li>G(1-8) moving/still threshold  - this setting will set the threshold for presence detection for each gate (movement or still presence respectively). If amoung of energy for corresponding gate will be greater than this threshold - sensor will feel presence in that gate.</li> </ol> </li> </ol>"},{"location":"satellite1-presence-sensors/#calibration","title":"Calibration","text":"<p>The idea is simple: </p> <ol> <li>Set sensor in place, where its 120 degrees will be most useful, and catch the least of unnecessary movement.</li> <li>Turn on Engineering mode switch.</li> </ol> Sensor Placement <ul> <li>It works the best in the room corner, opposite to a table, or on the short wall of long room (e.g. bathroom). This is especially convenient, if you have shower with glass door on the opposite end.</li> <li>It won't work in rooms with fans, or when it has dishwasher, or even running water in sight.</li> </ul> <ul> <li>Set the maximum gate based on room length. If you struggle with correct number, just wave hands or jump in opposite corner, see which gate detects movement, and set that number to Max moving/still distance gate. (Don't hesitate, set threshold a bit higher - that energy values can jump!)</li> <li>And finally, calibrate it for no presence: step out, let it set down for a bit (like a minute), and adjust moving and still thresholds, so they would be higher than energy levels for corresponding gates.</li> </ul>"},{"location":"satellite1-presence-sensors/#helpful-calibration-card","title":"Helpful Calibration Card","text":"<p>We built UI card, to make calibration process more intuitive. </p> <p>Here's how to use it:</p> <ol> <li>Install Mushroom cards, Auto-entities card and Decluttering card and Bar card from HACS.</li> <li>Put this to the very bottom of dashboard YAML in raw edit mode (this should be done once per dashboard): <pre><code>decluttering_templates:\n  ld2410:\n    card:\n      type: horizontal-stack\n      cards:\n        - type: custom:vertical-stack-in-card\n          cards:\n            - type: custom:mushroom-entity-card\n              entity: switch.[[device]]_engineering_mode\n              name: Preset edit mode\n              icon_color: pink\n              layout: horizontal\n              tap_action:\n                action: toggle\n              hold_action:\n                action: more-info\n              double_tap_action:\n                action: none\n            - type: custom:mushroom-number-card\n              entity: number.[[device]]_timeout\n              name: Detection cooldown\n              layout: horizontal\n              display_mode: buttons\n            - type: custom:mushroom-select-card\n              entity: select.[[device]]_distance_resolution\n              name: Gate resolution\n              icon_color: green\n              layout: horizontal\n            - type: custom:mushroom-entity-card\n              entity: switch.[[device]]_control_bluetooth\n              icon_color: indigo\n              name: Bluetooth\n              tap_action:\n                action: toggle\n              hold_action:\n                action: more-info\n              double_tap_action:\n                action: none\n            - type: custom:mushroom-template-card\n              secondary: &gt;-\n                {{ iif(is_state(entity, 'on'), 'Detected, ' +\n                states('sensor.[[device]]_still_distance') + ' cm', 'Not\n                detected') }}\n              primary: 'Still presence'\n              icon: mdi:motion-sensor\n              entity: binary_sensor.[[device]]_still_target\n              icon_color: '{% if(is_state(entity, \"on\")) %} red {% endif %}'\n              layout: horizontal\n              multiline_secondary: false\n            - type: custom:mushroom-template-card\n              secondary: &gt;-\n                {{ iif(is_state(entity, 'on'), 'Detected, ' +\n                states('sensor.[[device]]_moving_distance') + ' cm', 'Not\n                detected') }}\n              primary: 'Moving presence'\n              icon: mdi:motion-sensor\n              entity: binary_sensor.[[device]]_moving_target\n              icon_color: '{% if(is_state(entity, \"on\")) %} red {% endif %}'\n              layout: horizontal\n              multiline_secondary: false\n          title: 'Settings: common'\n        - type: custom:decluttering-card\n          template: ld2410_gates\n          variables:\n            - device: '[[device]]'\n            - type: still\n        - type: custom:decluttering-card\n          template: ld2410_gates\n          variables:\n            - device: '[[device]]'\n            - type: moving\n  ld2410_gates:\n    card:\n      type: custom:auto-entities\n      filter:\n        template: &gt;-\n          [ \n          {{\n          dict(\n            type='custom:mushroom-number-card',\n            entity='number.[[device]]_max_[[type]]_distance_gate',\n            name='Max detection gate',\n            display_mode='buttons',\n            icon='mdi:tape-measure',\n            layout='horizontal',\n            secondary_info='none',\n            icon_color='green',\n          )\n          }},\n          {% for i in [0, 1, 2, 3, 4, 5, 6, 7, 8] %}  {{\n          dict(\n            type='custom:mushroom-number-card',\n            entity='number.[[device]]_g' + i|string + '_[[type]]_threshold',\n            display_mode='slider',\n            icon_type='none',\n            primary_info='name',\n            secondary_info='state',\n            name='Gate ' + i|string,\n            card_mod={\n              'style':\n                {\n                  'mushroom-number-value-control$': {\n                     'mushroom-slider$': '.slider { height: 24px !important;}'\n                  },\n                  '.':'mushroom-number-value-control {height: 24px;}'\n                }\n            }\n          )\n          }},\n          {{\n          dict(\n            type='custom:bar-card',\n            direction='right',\n            columns=1,\n            height=16,\n            positions=dict(\n              indicator='off',\n              icon='off',\n              name='off',\n            ),\n            entities=[\n                {\n                  'entity': 'sensor.[[device]]_g' + i|string + '_[[type]]_energy',\n                  'color': 'orange'\n                }\n              ]\n          )\n          }},\n          {% endfor %}\n          ]\n      card_param: cards\n      card:\n        type: custom:vertical-stack-in-card\n        title: 'Gates: [[type]]'\n</code></pre></li> <li>Put following card to your dashboard. Replace <code>device</code> field value with with your satellite name, as it appears in entities IDs, like <code>satellite1_92fb28</code>. <pre><code>type: custom:decluttering-card\ntemplate: ld2410\nvariables:\n    - device: satellite1_9a72b3\n</code></pre> Blue bars are threshold sliders. Orange bars are energy indicators. That's it! Happy building!</li> </ol>"},{"location":"satellite1-presence-sensors/#about-the-ld2450","title":"About the LD2450","text":"<p>This is physically bigger and even more powerful presence sensor. It can track the motion for 3 moving occupants in the room while also detecting still human presence for distances up to 8 meters. It has a detection angle +/-60 degrees, and should be fine-tuned for best performance. Also it can see through glass walls, thin plywood etc.</p> The LD2450 must be running firmware version V2.02.23090617 to work with ESPHome.  Learn how to update the firmware by reading here. <p> Get it on Amazon</p>"},{"location":"satellite1-presence-sensors/#more-information-soon","title":"More Information Soon","text":"<ul> <li>Calibration tips</li> <li>Front-end Dashboard Card</li> </ul>"},{"location":"satellite1-recommended-accessories/","title":"Recommended Accessories","text":""},{"location":"satellite1-recommended-accessories/#satellite1-power-supply","title":"Satellite1 Power Supply","text":"<p>To power the Sat1 speaker using its built-in amplifier, you\u2019ll need a 9V USB-C power supply with a capacity of 20W-30W. Here are some recommended options.</p> <p> Cheap no name brands have risks, but this 20W (2.23A @ 9V) power adapter has worked well.  Get it on Amazon</p> <p> A brand name 30W power adapter is a safer bet (3A @ 9V).  Get it on Amazon</p> <p> Don't forget some standard USB-C cables.  These have been solid in my testing:  Get it on Amazon</p>"},{"location":"satellite1-recommended-accessories/#speaker-and-connectors","title":"Speaker and Connectors","text":"<p>You can get audio out of your Sat1 by plugging in headphones, or externally amplified speakers to the 3.5mm headphone jack.  Or you can power a single mono speaker directly off the Sat1 amplifier (if you have a 9V power supply).</p> <p></p> <p>Here are the supplies to connect a speaker to your Sat1:</p> <p> JST XH2.54-2P 2.54mm Pitch 2 Pin Male Connector Get it on Amazon</p> <p> These little speakers are full range (100hz-20khz) and pack a serious punch and are perfect size to fit into a small enclosure.  The smaller tab is (-) and goes to the BLACK  wire, and the bigger tab is (+)and goes to the RED wire. Order from Parts Express</p>"},{"location":"satellite1-recommended-accessories/#mmwave-human-presence-detectors","title":"mmWave Human Presence Detectors","text":"<p>Your Sat1 also supports the Human Presence Sensing Radar Modules LD2410 or LD2450.  Please be sure to read about how to calibrate your mmWave sensors.</p> <p> HLK-LD2410 mmWave is smaller sensor that is good at presence detection if the occupant is still in the room.  Note that this sensor can only detect one person at a time and cannot determine exactly where the person is in the room.  If multiple people are in the room it will focus on the person with the most \"energy\" or motion. Get it on Amazon</p> <p> HLK-LD2450 mmWave is a larger sensor that offers everything the ld2410 has, plus it can detect up to 3 moving persons and their position in the room.  NOTE: this sensor is not yet supported by ESPHome and we're dependent on a PR that we hope Home Assistant will soon merge. Get it on Amazon</p>"},{"location":"satellite1-set-up-voice-control/","title":"Set Up Voice Control","text":"<p>In this section we will configure your Satellite1 so it can control smart devices in your home intuitively.  By the end of this section you should be able to say:</p> <ul> <li>\"Hey Jarvis, are any doors unlocked in the home?\"</li> <li>\"Hey Jarvis, lock those doors please.\"</li> <li>\"Hey Jarvis, what is the difference between a black hole and white hole?\"</li> <li>\"Hey Jarvis, close the garage door and turn on the TV then tell me a joke.\"</li> </ul>"},{"location":"satellite1-set-up-voice-control/#what-is-a-voice-pipeline","title":"What is a Voice Pipeline?","text":"<p>Think about your interaction with any voice assistant:</p> <ol> <li>Wake Word - You say a special phrase, like \"Hey, Jarvis!\"</li> <li>Speech-to-Text - Your voice command is recorded and converted to a text transcription.</li> <li>Conversation Agent - The text transcription is processed by a rules-based engine (or perhaps an LLM) which executes your command and generates a text response.</li> <li>Text-to-Speech - The text response is converted into a synthetic voice response that is played back through the speaker.</li> </ol> <p>That's a voice pipeline. It's the backbone of any voice assistant. Each step in a voice pipeline can be modified and customized to fit your needs. What wake word do you want? What language are you speaking? Do you want a standard voice response or to hear Arnold Schwarzenegger speak back to you? Do you want Home Assistant, Google, or OpenAI to process and execute your command? Follow the steps below to set up a voice pipeline for your Satellite1.</p>"},{"location":"satellite1-set-up-voice-control/#create-a-voice-pipeline","title":"Create a Voice Pipeline:","text":"<ol> <li> <p>Go to Settings -&gt; Voice Assistants -&gt; Add Assistant &gt;</p> </li> <li> <p>Name your pipeline. Select your preferred Conversation Agent, Speech-to-Text, and Text-to-Speech engine. &gt;</p> </li> </ol>"},{"location":"satellite1-set-up-voice-control/#standard-conversation-agents","title":"Standard Conversation Agents","text":"<p>There are two standard voice pipelines we recommend trying out to get your feet wet:</p> Home Assistant's Cloud Assist Pipeline (Requires paid Home Assistant Cloud account, response times are fast!) <p>Set up Cloud Assist Pipeline</p> Home Assistant's Local Assist Pipeline (Free and completely private, response times depend on your hardware) <p>Set up Local Assist Pipeline</p>"},{"location":"satellite1-set-up-voice-control/#local-ai-conversation-agents","title":"Local AI Conversation Agents","text":"The FutureProofHomes team is working on a Local AI Base Station that \"just works\". Therefore, these docs will avoid sending you down a deep local AI rabbit hole. :) Thanks for your patience &amp; stay tuned! <p>Once you have one of the standard pipelines operational, you can upgrade to a Generative AI conversation agent. These agents allow the voice assistant to respond to more natural, conversational commands like, \u201cIt\u2019s dark in here,\u201d to turn on the lights, instead of requiring specific phrases like, \u201cTurn on the living room lights.\u201d Implementing completely local Generative AI LLMs, however, is not for the faint of heart. Your results may vary depending on factors such as the model you choose (e.g., Llama, Qwen, etc.), the number of entities exposed, how those entities and their aliases are named, the GPU\u2019s capabilities (more VRAM is better), and many other variables. If you\u2019re ready to take on this challenge, here are some tutorial videos to help you get started. Good luck!</p> Ollama AI Powered Conversation Agent (Free, requires a GPU, and can be hard to set up with simi-reliable function calling.) <p>Set up Ollama Conversation Agent</p>"},{"location":"satellite1-set-up-voice-control/#cloud-ai-conversation-agents","title":"Cloud AI Conversation Agents","text":"Warning: You are entrusting a cloud-based artificial intelligence that does not protect your privacy with control over your home. Proceed with caution! Google AI Conversation Agent (Free, but will collect your data.) <p>Set up Google AI Conversation Agent</p> OpenAI ChatGPT Conversation Agent (Expensive, and not open at all, despite the marketing name, and will collect your data.) <p>Set up OpenAI ChatGPT Conversation Agent</p> <p>NOTE: The following prompt has perfomed well with both OpenAI and Google's conversation agents.</p> <pre><code>Your name is Jarvis and you are a voice assistant for Home Assistant.\nAnswer questions about the world truthfully.\nAnswer in plain text without markdown language. \nKeep responses simple and to the point.\nAlways use 12hr time formats.\n</code></pre> <p>&gt;</p>"},{"location":"satellite1-set-up-voice-control/#combine-conversation-agents","title":"Combine Conversation Agents","text":"Combine a standard conversation agent with an AI conversation agent (It's like magic!) Requires Home Assistant version 2024.12.1 or later <p>A \"fall back\" pipeline will first use a non-AI conversation agent to process your request, and if that fails it will fall back to your preferred AI conversation agent. Combining these two conversation agents results in an almost magical voice experience and is highly recommended.</p> <p>Simply toggle on the \"Prefer handling commands locally\" switch underneath your Generative AI conversation agent:</p> <p>&gt;</p> <pre><code>[Read more about this feature release](https://www.home-assistant.io/blog/2024/12/04/release-202412/#let-your-voice-assistant-fall-back-to-an-llm-based-agent){ .md-button .md-button--primary }\n</code></pre>"},{"location":"satellite1-set-up-voice-control/#assign-a-voice-pipeline","title":"Assign a Voice Pipeline","text":"<ol> <li> <p>Go to Settings -&gt; Devices &amp; Services -&gt; ESPHome and click \"1 device\" under your Satellite1 device. &gt;</p> </li> <li> <p>In the Configuration section, select your Voice Pipeline. &gt;</p> </li> <li> <p>You can also set your preferred wake word. (NOTE: If you want to build your own custom wake word, then read here) &gt;</p> </li> </ol> <p>Congratulations! You've created your own voice pipeline for your Satellite1.</p>"},{"location":"satellite1-set-up-voice-control/#exposing-entities","title":"Exposing Entities","text":"<p>Your home assistant likely has hundreds if not thousands of entities. If you want to use them in your voice assistant, then you need to expose them to your voice assistant. Here's how:</p> <ol> <li> <p>Go to Settings -&gt; Voice Assistants -&gt; Expose and select the entities you want to control via your voice assistant.    </p> </li> <li> <p>Enable the \"Assist\" toggle switch and consider adding alias names that you might use when referring to the entity.    </p> </li> </ol>"},{"location":"satellite1-streaming-music/","title":"Streaming Music","text":""},{"location":"satellite1-streaming-music/#set-up-music-assistant","title":"Set Up Music Assistant","text":"<p>Your new Satellite1 can now control your home, but what about streaming music? Here\u2019s a guide to help you install and configure Music Assistant (MA) to stream music directly to your Satellite1.</p> <p>Music Assistant gets added to Home Assistant Core!</p> <p>This is great news\u2014it makes installing Music Assistant (MA) much easier! However, as of December 2024, it\u2019s important to note that this version of Music Assistant does not yet include \u201cvoice control capabilities.\u201d We recommend reviewing Music Assistant\u2019s guidelines on setting up voice control capabilities for the most up-to-date information.</p> <p>A Couple Tips:</p> <ol> <li>Spotify ONLY works if you are a paying subscriber.  This may or may not be addressed in future versions of MA.</li> <li>Watch your volume!  The 25W amplifier on the Sat1 can blow little speakers.</li> </ol> <p>Install Music Assistant</p>"},{"location":"satellite1-streaming-music/#add-a-music-provider","title":"Add a Music Provider","text":"<p>After installing Music Assistant you'll want to add a source for your Music:</p> <p>Connect a Music Provider to MA</p>"},{"location":"satellite1-streaming-music/#add-your-sat1-to-music-assistant","title":"Add your Sat1 to Music Assistant","text":"<ol> <li> <p>After adding a music provider, you'll want to add your Satellite1 to MA. Go to settings: </p> </li> <li> <p>Add Home Assistant as Player Provider </p> </li> <li> <p>Add your Satellite1 to the list of players: </p> </li> <li> <p>That's it! Select your Satellite1 as your Player Provider &amp; play some music. </p> </li> </ol>"},{"location":"satellite1-streaming-music/#controlling-music-with-your-voice","title":"Controlling Music with Your Voice","text":"<p>Beta Feature</p> <p>These capabilities are still rough around the edges.  It will get better in time.  Read the documentation carefully before you conclude something broken.  In reality it may just not work as you expect :)</p> <p>There are three ways to control music with your voice:</p> I want to control my music without an AI/LLM and have fewer capabilities. <p>Use Custom HA Intents to Control Music</p> I want to control my music with a cloud-based AI/LLM and have more capabilities that work often, but not perfectly. <p>Use OpenAI to Control Your Music</p> I want to control my music with an AI/LLM that I run locally and have more capabilities that work often, but not perfectly. <p>Use a Local LLM to Control Your Music</p>"},{"location":"satellite1-troubleshooting/","title":"Troubleshooting","text":""},{"location":"satellite1-troubleshooting/#inspecting-sat1-esp32-logs","title":"Inspecting Sat1 ESP32 Logs","text":"I want to see Sat1 ESP32 logs via a USB-C cable. <p>(NOTE: If you need lower level <code>DEBUG</code> logs then you're going to need to adopt the Sat1 to your ESPHome Dashboard and set log level from there.)</p> <ol> <li>Connect the Sat1 to your computer using a USB-C cable. </li> <li>Click the connect button below and select the correct JTAG device.</li> <li>Choose Logs &amp; Console:</li> </ol> <p> </p> <p></p> <p>If you click on \"Reset Device\" you should see a whole bunch of useful messages and information.  Scroll back up and take a look.  </p> <p></p> <p>Scroll to the bottom and issue a command \"Hey Jarvis, what time is it?\"</p> <p></p> I want to see Sat1 ESP32 logs via my Wi-Fi network (Over the Air) <p>These instructions will come soon.  It's complicated depending on your environment.  </p>"},{"location":"satellite1-troubleshooting/#debugging-your-voice-pipeline","title":"Debugging your Voice Pipeline","text":"<p>Curious why your Sat1 is doing something different than what you'd expect?  Use Home Assistant pipeline debugging tools.</p> <p></p> <ol> <li>Determine what pipeline your Sat1 is using by retracing these steps: Assign a Voice Pipeline &amp; Wake Word to your Satellite1</li> <li>In Home Assistant, go to Settings -&gt; Voice Assistants and select the 3 dots next to that pipeline.</li> <li>Read here: Debugging a Voice Pipeline</li> </ol>"},{"location":"satellite1-troubleshooting/#inspect-sat1-audio-recording-files","title":"Inspect Sat1 Audio Recording Files","text":"<p>Follow these steps to store a copy of your audio recordings in your Home Assistant server for inspection.</p> <ol> <li>Modify your <code>configuration.yaml</code> file and add the following:</li> </ol> <pre><code>assist_pipeline:\n  debug_recording_dir: /share/assist_pipeline\n</code></pre> <ol> <li>Now go to that path in your Home Assistant (recommend using Studio Code Server) and listen to the files there.</li> <li>Don't leave this on forever, it will clog up your server with audio recordings.</li> </ol>"},{"location":"satellite1-troubleshooting/#clear-wifi-credentials-to-restart-ble-improv","title":"Clear WiFi Credentials to Restart BLE Improv","text":"<ol> <li> <p>Press and hold the RIGHT (Action) button for approximately 22 seconds until the red LEDs complete their clockwise circle.  When the LEDs glow blue you can release the action button and wait as the XMOS chip is erased.  This process may take a few minutes before the Satelllite1 finally reboots to the factory firmware.  Upon first boot you will see the blue LEDs complete another clockwise circle indicating the XMOS is being flashed with the facory embedded firmware.</p> </li> <li> <p>Follow the steps to Add your Satellite1 to Home Assistant</p> </li> </ol>"},{"location":"satellite1-troubleshooting/#resetting-to-factory-settings","title":"Resetting to Factory Settings","text":"<p>This process will erase all settings on the Sat1 device and restore the latest production firmware, returning it to factory-new condition. You will need a USB-C cable and a computer with an internet connection (Google Chrome browser recommended).</p> First, remove the Sat1 from ESPHome &amp; Home Assistant <ol> <li>In your Home Assistant, go to Settings -&gt; Devices and Services -&gt; ESPHome and click the 3 dots next to the Satellite1 and select \"Delete\". </li> <li>If you \"Took Control\" of the Sat1 in your ESP Home Device Builder then go to Settings -&gt; Add-Ons -&gt; ESPHome Device Builder and open the Web UI to click the 3 dots next to the Satellite1 and select \"Delete\". </li> </ol> Then Flash your Satellite1 a Computer's USB-C Connection <ol> <li> <p>Unplug the Sat1 from power.</p> </li> <li> <p>Press and the HAT's \"Action\" button OR the CORE's \"Boot\" button.  </p> </li> <li> <p>While holding down the \"Boot\" button, plug the Sat1's \"ESP32/CORE\" connection into your computers USB-C port.  Let go of the \"Boot\" button after 3 seconds. </p> </li> <li> <p>Follow these steps to Add your Satellite1 to Home Assistant via a USB-C cable)</p> </li> </ol>"},{"location":"satellite1-troubleshooting/#need-more-help","title":"Need More Help?","text":"<p>While we hope this documentation will answer all your questions, but we realize support is sometimes needed.  The FutureProofHomes team will do their best to keep up with support requests, but we also lean on our community to help all of us.  See the links below and decide which method of support is best for your needs.</p> <p>Have a general question and need quick help from the community?</p> <p>Chat with the Community on Discord </p> <p>Discord too chatty and you want a record of your general question?</p> <p>Start a Discussion on Github </p> <p>Do you have a feature request you'd love to see?</p> <p>Look through our existing Feature Requests first, then open a new request if necessary:  Request a New Feature on Github </p> <p>Have you found a reproducible issue with the hardware or software? </p> <p>Report a Bug on Github </p>"}]}